#!/usr/bin/env ruby

require 'bundler/setup'
require 'pain'

include Pain

def display_options_for(input)
  Pain::OPTIONS[input].each do |v, msg|
    puts "#{v}: #{msg}"
  end
  puts
end

def ask_question_for(input)
  puts Pain::INPUT_MESSAGE[input]
end

def print_report_for(o)
  pain = Pain.user_pain(o[:bug_type], o[:likelihood], o[:impact])
  puts "Type:       #{o[:bug_type]} - #{Pain::OPTIONS[:bug_type][o[:bug_type]]}"
  puts "Likelihood: #{o[:likelihood]} - #{Pain::OPTIONS[:likelihood][o[:likelihood]]}"
  puts "Impact:     #{o[:impact]} - #{Pain::OPTIONS[:impact][o[:impact]]}"
  puts
  puts "User Pain: #{pain}%"
end

options = {}

OptionParser.new do |opts|
  opts.on('-l', '--likelihood [LIKELIHOOD]', OptionParser::DecimalInteger,
	  'How likely (from 1-5) is this bug to occur?') do |like|
    options[:likelihood] = Pain::normalize(like, :likelihood)
  end

  opts.on('-i', '--impact [IMPACT]', OptionParser::DecimalInteger,
	  'How much impact will this bug have?') do |impact|
    options[:impact] = Pain.normalize(impact, :impact)
  end

  opts.on('-t', '--type [TYPE]', OptionParser::DecimalInteger,
	  'What kind of bug is this?') do |bug_type|
    options[:bug_type] = Pain.normalize(bug_type, :bug_type)
  end
end.parse!

[:bug_type, :likelihood, :impact].each do |input|
  first = true
  until options[input]
    ask_question_for input
    display_options_for(input) if first

    response       = gets.chomp
    options[input] = Pain::normalize(response, input)
    first          = false
  end
end

print_report_for options
